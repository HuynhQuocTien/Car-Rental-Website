CREATE TABLE `Vehicles` (
	`VehiclesID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`Make` VARCHAR(255),
	`Model` VARCHAR(255),
	`Year` INTEGER,
	`LicensePlateNumber` VARCHAR(255),
	`Color` VARCHAR(255),
	`Mileage` FLOAT,
	`VIN` VARCHAR(255),
	`VehicleType` INTEGER,
	`Transmission` VARCHAR(255),
	`Seats` INTEGER,
	`FuelType` VARCHAR(255),
	`FuelConsumption` VARCHAR(255),
	`Description` VARCHAR(500),	
	`Status` INTEGER,
	`Is_Delete` INTEGER,
	PRIMARY KEY(`VehiclesID`)
);


CREATE TABLE `Customers` (
	`CustomerID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`FullName` VARCHAR(255),
	`PhoneNumber` VARCHAR(255),
	`IdentityCard` VARCHAR(255),
	`Avatar` VARCHAR(255),
	`AccountID` INTEGER,
	`Status` INTEGER,
    `Is_Delete` INTEGER,
	PRIMARY KEY(`CustomerID`)
);


CREATE TABLE `RentalOrders` (
	`OrderID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`CustomerID` INTEGER,
	`VehicleID` INTEGER,
	`ActualReturnDate` DATETIME,
	`TotalAmount` DOUBLE,
	`DamagePenalty` DOUBLE,
	`Address` VARCHAR(255),
	`Status` INTEGER,
	`PaymentID` INTEGER,
	PRIMARY KEY(`OrderID`)
);


CREATE TABLE `Payments` (
	`PaymentID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`OrderID` INTEGER,
	`PaymentDate` DATETIME,
	`PaymentMethod` VARCHAR(255),
	`Amount` DOUBLE,
	`Status` INTEGER,
	PRIMARY KEY(`PaymentID`)
);


CREATE TABLE `Users` (
	`UserID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`FullName` VARCHAR(255),
	`Avatar` VARCHAR(255),
	`JoinDate` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	`AccountID` INTEGER,
	`Active` INTEGER,
	`Is_Delete` INTEGER,
	PRIMARY KEY(`UserID`)
);


CREATE TABLE `Reviews` (
	`ReviewID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`CustomerID` INTEGER,
	`VehiclesID` INTEGER,
	`Rating` INTEGER,
	`Comment` VARCHAR(255),
	`ReviewDate` DATETIME,
	PRIMARY KEY(`ReviewID`)
);


CREATE TABLE `Roles` (
	`RoleID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`RoleName` VARCHAR(255),
	PRIMARY KEY(`RoleID`)
);


CREATE TABLE `Permissions` (
	`PermissionID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`PermissionName` VARCHAR(255),
	`Description` VARCHAR(255),
	PRIMARY KEY(`PermissionID`)
);


CREATE TABLE `RolePermissions` (
	`RolePermissionID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`RoleID` INTEGER,
	`PermissionID` INTEGER,
	PRIMARY KEY(`RolePermissionID`)
);


CREATE TABLE `Address` (
	`AddressID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`CustomerID` INTEGER,
	`Address` VARCHAR(255),
	`Ward` VARCHAR(255),
	`District` VARCHAR(255),
	`Province` VARCHAR(255),
	PRIMARY KEY(`AddressID`)
);


CREATE TABLE `Inspections` (
	`InspectionID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`RentalOrderDetailID` INTEGER,
	`InspectionDate` DATE,
	`ConditionBefore` VARCHAR(255),
	`ConditionAfter` VARCHAR(255),
	`DamageID` INTEGER,
	`UserID` INTEGER,
	`TotalFineAmount` VARCHAR(255),
	`ConditonID` INTEGER,
	PRIMARY KEY(`InspectionID`)
);


CREATE TABLE `DamageTypes` (
	`DamageTypeID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`DamageName` VARCHAR(255),
	`FineAmount` DOUBLE,
	`VehicleTypesID` INTEGER,
	PRIMARY KEY(`DamageTypeID`)
);


CREATE TABLE `RentalOrderDetails` (
	`OrderDetailID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`OrderID` INTEGER,
	`VehiclesID` INTEGER,
	`RentalRate` DOUBLE,
	`ReturnDate` DATETIME,
	`ActualReturnDate` DATETIME,
	`DamagePenalty` DOUBLE,
	`UserID` INTEGER,
	`Notes` VARCHAR(255),
	`Active` INTEGER COMMENT 'Khách hàng đã gia hạn thuê thêm vài ngày nữa chưa? 
0 - Chưa gia hạn (Hiện thị nút Gia hạn)
1 - Đã gia hạn rồi (Ẩn nút Gia Hạn)
',
	`Status` INTEGER COMMENT 'trạng thái trả xe chưa
',
	PRIMARY KEY(`OrderDetailID`)
);


CREATE TABLE `VehicleTypes` (
	`VehicleTypesID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`NameType` VARCHAR(255),
	PRIMARY KEY(`VehicleTypesID`)
);


CREATE TABLE `DamageDetails` (
	`DamageDetailID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`DamageTypeID` INTEGER,
	PRIMARY KEY(`DamageDetailID`)
);


CREATE TABLE `VehicleImages` (
	`ImageID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`VehicleID` INTEGER,
	`ImageURL` VARCHAR(255),
	`IsPrimary` INTEGER,
	PRIMARY KEY(`ImageID`)
);


CREATE TABLE `VehicleCondition` (
	`ConditionID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`Description` VARCHAR(255),
	`Image` VARCHAR(255),
	`Status` INTEGER,
	PRIMARY KEY(`ConditionID`)
);


CREATE TABLE `ImagesInspect` (
	`Id` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`InspectionID` INTEGER,
	`ImageURL` INTEGER,
	PRIMARY KEY(`Id`)
);


CREATE TABLE `Accounts` (
	`AccountID` INTEGER NOT NULL AUTO_INCREMENT UNIQUE,
	`Username` VARCHAR(255),
	`Password` VARCHAR(255),
	`Email` VARCHAR(255),
	`RoleID` INTEGER,
	PRIMARY KEY(`AccountID`)
);


ALTER TABLE `Address`
ADD FOREIGN KEY(`CustomerID`) REFERENCES `Customers`(`CustomerID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `RentalOrderDetails`
ADD FOREIGN KEY(`OrderID`) REFERENCES `RentalOrders`(`OrderID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `RentalOrders`
ADD FOREIGN KEY(`CustomerID`) REFERENCES `Customers`(`CustomerID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Vehicles`
ADD FOREIGN KEY(`VehicleType`) REFERENCES `VehicleTypes`(`VehicleTypesID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Reviews`
ADD FOREIGN KEY(`VehiclesID`) REFERENCES `Vehicles`(`VehiclesID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Reviews`
ADD FOREIGN KEY(`CustomerID`) REFERENCES `Customers`(`CustomerID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `RolePermissions`
ADD FOREIGN KEY(`RoleID`) REFERENCES `Roles`(`RoleID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `RolePermissions`
ADD FOREIGN KEY(`PermissionID`) REFERENCES `Permissions`(`PermissionID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `RentalOrderDetails`
ADD FOREIGN KEY(`UserID`) REFERENCES `Users`(`UserID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Inspections`
ADD FOREIGN KEY(`UserID`) REFERENCES `Users`(`UserID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Inspections`
ADD FOREIGN KEY(`DamageID`) REFERENCES `DamageDetails`(`DamageDetailID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `DamageDetails`
ADD FOREIGN KEY(`DamageTypeID`) REFERENCES `DamageTypes`(`DamageTypeID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `DamageTypes`
ADD FOREIGN KEY(`VehicleTypesID`) REFERENCES `VehicleTypes`(`VehicleTypesID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `VehicleImages`
ADD FOREIGN KEY(`VehicleID`) REFERENCES `Vehicles`(`VehiclesID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `RentalOrders`
ADD FOREIGN KEY(`PaymentID`) REFERENCES `Payments`(`PaymentID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `RentalOrderDetails`
ADD FOREIGN KEY(`VehiclesID`) REFERENCES `Vehicles`(`VehiclesID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Inspections`
ADD FOREIGN KEY(`RentalOrderDetailID`) REFERENCES `RentalOrderDetails`(`OrderDetailID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Inspections`
ADD FOREIGN KEY(`ConditonID`) REFERENCES `VehicleCondition`(`ConditionID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `ImagesInspect`
ADD FOREIGN KEY(`InspectionID`) REFERENCES `Inspections`(`InspectionID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Customers`
ADD FOREIGN KEY(`AccountID`) REFERENCES `Accounts`(`AccountID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Users`
ADD FOREIGN KEY(`AccountID`) REFERENCES `Accounts`(`AccountID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `Accounts`
ADD FOREIGN KEY(`RoleID`) REFERENCES `Roles`(`RoleID`)
ON UPDATE NO ACTION ON DELETE NO ACTION;